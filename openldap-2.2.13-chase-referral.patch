474788:  LDAP causes crashes when attempting to authenticate with Active Directory

Source: upstream, ITS#5853
Backported-by: Jan Safranek <jsafrane@redhat.com>

diff -r -u ../orig/libraries/libldap/os-ip.c openldap-2.2.13/libraries/libldap/os-ip.c
--- ../orig/libraries/libldap/os-ip.c	2004-03-17 21:10:49.000000000 +0100
+++ openldap-2.2.13/libraries/libldap/os-ip.c	2009-02-17 17:22:34.000000000 +0100
@@ -681,6 +681,9 @@
 
 	sip = (struct selectinfo *)ld->ld_selectinfo;
 
+	if (ber_sockbuf_ctrl( sb, LBER_SB_OPT_DATA_READY, NULL ))
+		return 1;
+
 	ber_sockbuf_ctrl( sb, LBER_SB_OPT_GET_FD, &sd );
 	return( FD_ISSET( sd, &sip->si_use_readfds ));
 }
diff -r -u ../orig/libraries/libldap/result.c openldap-2.2.13/libraries/libldap/result.c
--- ../orig/libraries/libldap/result.c	2009-02-17 14:23:17.000000000 +0100
+++ openldap-2.2.13/libraries/libldap/result.c	2009-02-18 12:34:40.000000000 +0100
@@ -73,7 +73,7 @@
 static int wait4msg LDAP_P(( LDAP *ld, ber_int_t msgid, int all, struct timeval *timeout,
 	LDAPMessage **result ));
 static ber_tag_t try_read1msg LDAP_P(( LDAP *ld, ber_int_t msgid,
-	int all, Sockbuf *sb, LDAPConn **lc, LDAPMessage **result ));
+	int all, Sockbuf *sb, LDAPConn *lc, LDAPMessage **result ));
 static ber_tag_t build_result_ber LDAP_P(( LDAP *ld, BerElement **bp, LDAPRequest *lr ));
 static void merge_error_info LDAP_P(( LDAP *ld, LDAPRequest *parentr, LDAPRequest *lr ));
 static LDAPMessage * chkResponseList LDAP_P(( LDAP *ld, int msgid, int all));
@@ -120,15 +120,9 @@
 #ifdef LDAP_R_COMPILE
 	ldap_pvt_thread_mutex_lock( &ld->ld_res_mutex );
 #endif
-	lm = chkResponseList(ld, msgid, all);
 
-	if ( lm == NULL ) {
-		rc = wait4msg( ld, msgid, all, timeout, result );
-	} else {
-		*result = lm;
-		ld->ld_errno = LDAP_SUCCESS;
-		rc = lm->lm_msgtype;
-	}
+	rc = wait4msg( ld, msgid, all, timeout, result );
+
 #ifdef LDAP_R_COMPILE
 	ldap_pvt_thread_mutex_unlock( &ld->ld_res_mutex );
 #endif
@@ -321,7 +315,5 @@
 				if ( ber_sockbuf_ctrl( lc->lconn_sb,
 						LBER_SB_OPT_DATA_READY, NULL ) ) {
-					rc = try_read1msg( ld, msgid, all, lc->lconn_sb,
-						&lc, result );
 					lc_ready = 1;
 				    break;
 				}
@@ -355,7 +349,11 @@
 			    if ( rc == -1 ) {
 				    rc = -2;	/* select interrupted: loop */
 			    } else {
-				    rc = -2;
+				    lc_ready= 1 ;
+			    }
+		   }
+		   if ( lc_ready ) {
+			    rc = -2;
 #ifdef LDAP_R_COMPILE
 				    ldap_pvt_thread_mutex_lock( &ld->ld_req_mutex );
 #endif
@@ -375,12 +373,28 @@
 					        LDAP_CONNST_CONNECTED &&
 					        ldap_is_read_ready( ld,
 					        lc->lconn_sb )) {
+						    /* Don't let it get freed out from under us */
+						    ++lc->lconn_refcnt;
+
 						    rc = try_read1msg( ld, msgid, all,
-						        lc->lconn_sb, &lc, result );
-							if ( lc == NULL ) lc = nextlc;
+						        lc->lconn_sb, lc, result );
+						    nextlc = lc->lconn_next;
+						/* Only take locks if we're really freeing */
+						if ( lc->lconn_refcnt <= 1 ) {
+#ifdef LDAP_R_COMPILE
+						    ldap_pvt_thread_mutex_lock( &ld->ld_req_mutex );
+#endif
+						    ldap_free_connection( ld, lc, 0, 1 );
+#ifdef LDAP_R_COMPILE
+						    ldap_pvt_thread_mutex_unlock( &ld->ld_req_mutex );
+#endif
+						} else {
+						    --lc->lconn_refcnt;
+						}
+					    } else {
+						nextlc = lc->lconn_next;
 					    }
 				    }
-			    }
 		    }
 		}
 
@@ -389,7 +403,6 @@
 			if (( tv.tv_sec -=  ( tmp_time - start_time )) <= 0 ) {
 				rc = 0;	/* timed out */
 				ld->ld_errno = LDAP_TIMEOUT;
-				break;
 			}
 
 #ifdef NEW_LOGGING
@@ -413,7 +426,7 @@
 	ber_int_t msgid,
 	int all,
 	Sockbuf *sb,
-	LDAPConn **lcp,
+	LDAPConn *lc,
 	LDAPMessage **result )
 {
 	BerElement	*ber;
@@ -423,7 +436,6 @@
 	ber_len_t	len;
 	int		foundit = 0;
 	LDAPRequest	*lr, *tmplr;
-	LDAPConn	*lc;
 	BerElement	tmpber;
 	int		rc, refer_cnt, hadref, simple_request;
 	ber_int_t	lderr;
@@ -437,8 +449,7 @@
 	int     v3ref;
 
 	assert( ld != NULL );
-	assert( lcp != NULL );
-	assert( *lcp != NULL );
+	assert( lc != NULL );
 	
 #ifdef NEW_LOGGING
 	LDAP_LOG ( OPERATION, ARGS, "read1msg: msgid %d, all %d\n", msgid, all, 0 );
@@ -446,8 +457,6 @@
 	Debug( LDAP_DEBUG_TRACE, "read1msg: msgid %d, all %d\n", msgid, all, 0 );
 #endif
 
-	lc = *lcp;
-
 retry:
 	if ( lc->lconn_ber == NULL ) {
 		lc->lconn_ber = ldap_alloc_ber_with_options(ld);
@@ -822,8 +831,8 @@
 			}
 
 			if ( lc != NULL ) {
-				ldap_free_connection( ld, lc, 0, 1 );
-				*lcp = NULL;
+				--lc->lconn_refcnt;
+				lc = NULL;
 			}
 		}
 	}
