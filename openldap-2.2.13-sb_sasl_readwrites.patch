--- openldap-2.2.13/libraries/libldap/cyrus.c.orig	2006-10-30 17:12:04.000000000 +0000
+++ openldap-2.2.13/libraries/libldap/cyrus.c	2006-10-30 18:11:25.000000000 +0000
@@ -306,11 +306,12 @@ sb_sasl_read( Sockbuf_IO_Desc *sbiod, vo
    	}
 
 	/* Decode the packet */
-	ret = sasl_decode( p->sasl_context, p->sec_buf_in.buf_base,
-		p->sec_buf_in.buf_end,
-		(SASL_CONST char **)&p->buf_in.buf_base,
-		(unsigned *)&p->buf_in.buf_end );
-
+	{
+		unsigned tmpsize = p->buf_in.buf_end;
+		ret = sasl_decode( p->sasl_context, p->sec_buf_in.buf_base, p->sec_buf_in.buf_end, (SASL_CONST char **) &p->buf_in.buf_base, (unsigned *) &tmpsize);
+		p->buf_in.buf_end = tmpsize;
+	}
+			
 	/* Drop the packet from the input buffer */
 	sb_sasl_drop_packet( &p->sec_buf_in, sbiod->sbiod_sb->sb_debug );
 
@@ -358,25 +359,28 @@ sb_sasl_write( Sockbuf_IO_Desc *sbiod, v
 #else
 	ber_pvt_sb_buf_destroy( &p->buf_out );
 #endif
-	if ( len > *p->sasl_maxbuf - 100 )
+	if ( len > *p->sasl_maxbuf - 100 ) {
 		len = *p->sasl_maxbuf - 100;	/* For safety margin */
-	ret = sasl_encode( p->sasl_context, buf, len,
-		(SASL_CONST char **)&p->buf_out.buf_base,
-		(unsigned *)&p->buf_out.buf_size );
+	}
+	{
+		unsigned tmpsize = p->buf_out.buf_size;
+		ret = sasl_encode( p->sasl_context, buf, len, (SASL_CONST char **) &p->buf_out.buf_base, &tmpsize);
+		p->buf_out.buf_size = tmpsize;
+	}
+
 	if ( ret != SASL_OK ) {
 		ber_log_printf( LDAP_DEBUG_ANY, sbiod->sbiod_sb->sb_debug,
 			"sb_sasl_write: failed to encode packet: %s\n",
 			sasl_errstring( ret, NULL, NULL ) );
+		errno = EIO;
 		return -1;
 	}
 	p->buf_out.buf_end = p->buf_out.buf_size;
 
 	ret = ber_pvt_sb_do_write( sbiod, &p->buf_out );
-	if ( ret <= 0 ) {
-		/* caller will retry, so clear this buffer out */
-		p->buf_out.buf_ptr = p->buf_out.buf_end;
-		return ret;
-	}
+	/* return number of bytes encoded, not written, to ensure
+	 * no byte is encoded twice (even if only sent once).
+	 */
 	return len;
 }
 
