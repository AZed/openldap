libldap ignores a directory of CA certificates if any of them can't be read

Resolves: #609722
Bacported from: openldap-2.4.19

diff -ruNP openldap-2.2.29.old/libraries/libldap/tls.c openldap-2.2.29.new/libraries/libldap/tls.c
--- openldap-2.2.29.old/libraries/libldap/tls.c	2011-08-18 17:55:56.000000000 +0200
+++ openldap-2.2.29.new/libraries/libldap/tls.c	2011-08-18 18:47:52.000000000 +0200
@@ -186,7 +186,7 @@
  * initialize the default context
  */
 int
-ldap_pvt_tls_init_def_ctx( void )
+ldap_pvt_tls_init_def_ctx_future( int is_server )
 {
 	STACK_OF(X509_NAME) *calist;
 	int rc = 0;
@@ -240,8 +240,10 @@
 			goto error_exit;
 		}
 
-		SSL_CTX_set_session_id_context( tls_def_ctx,
-			(const unsigned char *) "OpenLDAP", sizeof("OpenLDAP")-1 );
+		if ( is_server ) {
+			SSL_CTX_set_session_id_context( tls_def_ctx,
+				(const unsigned char *) "OpenLDAP", sizeof("OpenLDAP")-1 );
+		}
 
 		if ( tls_opt_ciphersuite &&
 			!SSL_CTX_set_cipher_list( tls_def_ctx, ciphersuite ) )
@@ -284,26 +286,28 @@
 				goto error_exit;
 			}
 
-			calist = get_ca_list( cacertfile, cacertdir );
-			if ( !calist ) {
-#ifdef NEW_LOGGING
-				LDAP_LOG ( TRANSPORT, ERR, "ldap_pvt_tls_init_def_ctx: "
-					"TLS could not load client CA list (file: `%s',dir:`%s')\n",
-					tls_opt_cacertfile ? tls_opt_cacertfile : "",
-					tls_opt_cacertdir ? tls_opt_cacertdir : "", 0 );
-#else
-				Debug( LDAP_DEBUG_ANY, "TLS: "
-					"could not load client CA list (file:`%s',dir:`%s').\n",
-					tls_opt_cacertfile ? tls_opt_cacertfile : "",
-					tls_opt_cacertdir ? tls_opt_cacertdir : "",
-					0 );
-#endif
-				tls_report_error();
-				rc = -1;
-				goto error_exit;
-			}
+			if ( is_server ) {
+				calist = get_ca_list( cacertfile, cacertdir );
+				if ( !calist ) {
+#ifdef NEW_LOGGING
+					LDAP_LOG ( TRANSPORT, ERR, "ldap_pvt_tls_init_def_ctx: "
+						"TLS could not load client CA list (file: `%s',dir:`%s')\n",
+						tls_opt_cacertfile ? tls_opt_cacertfile : "",
+						tls_opt_cacertdir ? tls_opt_cacertdir : "", 0 );
+#else
+					Debug( LDAP_DEBUG_ANY, "TLS: "
+						"could not load client CA list (file:`%s',dir:`%s').\n",
+						tls_opt_cacertfile ? tls_opt_cacertfile : "",
+						tls_opt_cacertdir ? tls_opt_cacertdir : "",
+						0 );
+#endif
+					tls_report_error();
+					rc = -1;
+					goto error_exit;
+				}
 
-			SSL_CTX_set_client_CA_list( tls_def_ctx, calist );
+				SSL_CTX_set_client_CA_list( tls_def_ctx, calist );
+			}
 		}
 
 		if ( tls_opt_keyfile &&
@@ -395,6 +399,18 @@
 	return rc;
 }
 
+int
+ldap_pvt_tls_init_def_ctx( void )
+{
+	/* Future versions of OpenLDAP add 'is_server' parameter to this function and we
+	 * need it because of rhbz #609722. ldap_pvt_* functions should be used only internally,
+         * header files are not provided, but the functions are exported in libldap. This wrapper
+	 * will prevent the ABI to change.
+	 * This is possible, as 'is_server == 0' only disables some parts of the code.
+	 */
+	return ldap_pvt_tls_init_def_ctx_future( 1 );
+}
+
 static STACK_OF(X509_NAME) *
 get_ca_list( char * bundle, char * dir )
 {
@@ -422,7 +438,7 @@
 }
 
 static SSL *
-alloc_handle( void *ctx_arg )
+alloc_handle( void *ctx_arg, int is_server )
 {
 	SSL_CTX	*ctx;
 	SSL	*ssl;
@@ -430,7 +446,7 @@
 	if ( ctx_arg ) {
 		ctx = (SSL_CTX *) ctx_arg;
 	} else {
-		if ( ldap_pvt_tls_init_def_ctx() < 0 ) return NULL;
+		if ( ldap_pvt_tls_init_def_ctx_future( is_server ) < 0 ) return NULL;
 		ctx = tls_def_ctx;
 	}
 
@@ -752,7 +768,7 @@
 		void *ctx = ld->ld_defconn
 			? ld->ld_defconn->lconn_tls_ctx : NULL;
 
-		ssl = alloc_handle( ctx );
+		ssl = alloc_handle( ctx, 0 );
 
 		if ( ssl == NULL ) return -1;
 
@@ -824,7 +840,7 @@
 		ber_sockbuf_ctrl( sb, LBER_SB_OPT_GET_SSL, (void *)&ssl );
 
 	} else {
-		ssl = alloc_handle( ctx_arg );
+		ssl = alloc_handle( ctx_arg, 1 );
 		if ( ssl == NULL ) return -1;
 
 #ifdef LDAP_DEBUG
