OpenLDAP ITS #3578

When chasing v3 referrals, we need to keep track of how deep the stack
of referrals is, but we actually mark the depth of all searches as the
depth of the top search (0) plus one, which never increases.  The result
is an infinite loop if we don't keep track of what's actually going on.


--- openldap-2.1.30/libraries/libldap/request.c.hop	2003-03-03 12:10:05.000000000 -0500
+++ openldap-2.1.30/libraries/libldap/request.c	2005-07-13 16:18:51.000000000 -0400
@@ -133,7 +133,7 @@
 			return LDAP_PARAM_ERROR;
 	}
 #endif
-	rc = ldap_send_server_request( ld, ber, ld->ld_msgid, NULL,
+	rc = ldap_send_server_request( ld, ber, ld->ld_msgid, NULL, -1,
 									servers, NULL, NULL );
 	if (servers)
 		ldap_free_urllist(servers);
@@ -181,6 +181,7 @@
 	BerElement *ber,
 	ber_int_t msgid,
 	LDAPRequest *parentreq,
+	int parentcnt,
 	LDAPURLDesc *srvlist,
 	LDAPConn *lc,
 	LDAPreqinfo *bind )
@@ -260,7 +261,10 @@
 			++parentreq->lr_outrefcnt;
 		}
 		lr->lr_origid = parentreq->lr_origid;
-		lr->lr_parentcnt = parentreq->lr_parentcnt + 1;
+		if ( parentcnt < 0 ) {
+			parentcnt = lr->lr_parentcnt;
+		}
+		lr->lr_parentcnt = parentcnt + 1;
 		lr->lr_parent = parentreq;
 		lr->lr_refnext = parentreq->lr_child;
 		parentreq->lr_child = lr;
@@ -849,7 +853,7 @@
 		rinfo.ri_msgid = origreq->lr_origid;
 		rinfo.ri_url = refarray[i];
 		if ( (rc = ldap_send_server_request( ld, ber, ld->ld_msgid,
-		    	origreq, srv, NULL, &rinfo )) < 0 ) {
+		    	origreq, lr->lr_parentcnt, srv, NULL, &rinfo )) < 0 ) {
 			/* Failure, try next referral in the list */
 #ifdef NEW_LOGGING
 			LDAP_LOG ( OPERATION, ERR, 
@@ -1037,7 +1041,7 @@
 		rinfo.ri_msgid = origreq->lr_origid;
 
 		rc = ldap_send_server_request( ld, ber, ld->ld_msgid,
-		    lr, srv, NULL, &rinfo );
+		    lr, -1, srv, NULL, &rinfo );
 
 		LDAP_FREE( rinfo.ri_url );
 
--- openldap/libraries/libldap/ldap-int.h
+++ openldap/libraries/libldap/ldap-int.h
@@ -436,7 +436,7 @@
 LDAP_F (BerElement *) ldap_alloc_ber_with_options( LDAP *ld );
 LDAP_F (void) ldap_set_ber_options( LDAP *ld, BerElement *ber );
 
-LDAP_F (int) ldap_send_server_request( LDAP *ld, BerElement *ber, ber_int_t msgid, LDAPRequest *parentreq, LDAPURLDesc *srvlist, LDAPConn *lc, LDAPreqinfo *bind );
+LDAP_F (int) ldap_send_server_request( LDAP *ld, BerElement *ber, ber_int_t msgid, LDAPRequest *parentreq, int parentcnt, LDAPURLDesc *srvlist, LDAPConn *lc, LDAPreqinfo *bind );
 LDAP_F (LDAPConn *) ldap_new_connection( LDAP *ld, LDAPURLDesc *srvlist, int use_ldsb, int connect, LDAPreqinfo *bind );
 LDAP_F (LDAPRequest *) ldap_find_request_by_msgid( LDAP *ld, ber_int_t msgid );
 LDAP_F (void) ldap_free_request( LDAP *ld, LDAPRequest *lr );
